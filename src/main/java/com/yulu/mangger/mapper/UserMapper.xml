<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yulu.mangger.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.yulu.mangger.bean.User">

        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="INTEGER"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="telephone" property="telephone" jdbcType="VARCHAR"/>
        <result column="ident" property="ident" jdbcType="INTEGER"/>
        <result column="isdelete" property="isdelete" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="createDate" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="head_image" property="head_image" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value}
                                    and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem"
                                             open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria"
                     separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value}
                                    and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem"
                                             open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
		id, username, password, sex, email, telephone, ident,
		isdelete,status,createDate,nickname,head_image
	</sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
            parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user_inf
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user_inf
		where id = #{id,jdbcType=INTEGER}
	</delete>
    <insert id="insert" parameterType="com.yulu.mangger.bean.User">
		insert into user_inf (id,
		username, password,
		sex, email, telephone,
		ident, isdelete,status,createDate,nickname,head_image)
		values
		(#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{sex,jdbcType=INTEGER},
		#{email,jdbcType=VARCHAR}, #{telephone,jdbcType=INTEGER},
		#{ident,jdbcType=INTEGER}, #{isdelete,jdbcType=INTEGER})

		#{status,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP})
		#{nickname,jdbcType=VARCHAR}, #{head_image,jdbcType=VARCHAR})
	</insert>
    <insert id="insertSelective" parameterType="com.yulu.mangger.bean.User">
        insert into user_inf
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="telephone != null">
                telephone,
            </if>
            <if test="ident != null">
                ident,
            </if>
            <if test="isdelete != null">
                isdelete,
            </if>

            <if test="status != null">
                status,
            </if>
            <if test="createDate != null">
                createDate,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="head_image != null">
                head_image,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                #{telephone,jdbcType=INTEGER},
            </if>
            <if test="ident != null">
                #{ident,jdbcType=INTEGER},
            </if>
            <if test="isdelete != null">
                #{isdelete,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="head_image != null">
                #{head_image,jdbcType=VARCHAR},
            </if>

        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yulu.mangger.bean.User">
        update user_inf
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                telephone = #{telephone,jdbcType=INTEGER},
            </if>
            <if test="ident != null">
                ident = #{ident,jdbcType=INTEGER},
            </if>
            <if test="isdelete != null">
                isdelete = #{isdelete,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                createDate = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="nickname != null">
                nickname =  #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="head_image != null">
                head_image = #{head_image,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yulu.mangger.bean.User">
		update user_inf
		set
		username = #{username,jdbcType=VARCHAR},
		password =
		#{password,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=INTEGER},
		email =
		#{email,jdbcType=VARCHAR},
		telephone = #{telephone,jdbcType=INTEGER},
		ident = #{ident,jdbcType=INTEGER},
		isdelete =
		#{isdelete,jdbcType=INTEGER},
		status =
		#{status,jdbcType=INTEGER},
		createDate =
		#{createDate,jdbcType=TIMESTAMP},
		nickname =
		#{nickname,jdbcType=VARCHAR},
		head_image =
		#{head_image,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
    <select id="findUserList" parameterType="com.yulu.mangger.bean.User"
            resultType="com.yulu.mangger.bean.User">
        select * from user_inf where ident=0
        <if test="username!=null">
            and username like '%${username}%'
        </if>
    </select>
    <select id="findLoginUser" parameterType="com.yulu.mangger.bean.User"
            resultType="com.yulu.mangger.bean.User">
		select * from user_inf where username=#{username} and
		password=#{password}
	</select>

    <select id="findUser" parameterType="com.yulu.mangger.bean.User"
            resultType="com.yulu.mangger.bean.User">
        select * from user_inf where isdelete=0
        <if test="username!=null">
            and username = #{username}
        </if>
        <if test="email!=null">
            and email = #{email}
        </if>
        <if test="telephone!=null">
            and telephone = #{telephone}
        </if>
    </select>

    <select id="banById" parameterType="com.yulu.mangger.bean.User" resultType="com.yulu.mangger.bean.User">
		update user_inf
		set isdelete = 1
		where id = #{id}
	</select>
    <select id="okById" parameterType="com.yulu.mangger.bean.User" resultType="com.yulu.mangger.bean.User">
		update user_inf
		set isdelete = 0
		where id = #{id}
	</select>
</mapper>